.include "defs/timer_utils.inc"

.set UART_MACROS_ENABLED = 1

;reserved PORTL, TIM4, TIM5, r2, r3, r4, r5, r18, r19
;reserved registers
.def dsens_out_l = r2
.def dsens_out_r = r3
.def dsens_tl = r4
.def dsens_th = r5
.def dsens_tmp1 = r18
.def dsens_tmp2 = r19

;params
.equ DSENS_ECHO_TIMEOUT_LOW_US = 40000
.equ DSENS_ECHO_MIN_US = 150
.equ DSENS_ECHO_MAX_US = 2000
.equ DSENS_ECHO_MAX_HELD_US = 3000
.equ DSENS_ECHO_TIMEOUT_HIGH_US = 30000
.equ DSENS_SMOOTH = 0

;ports
.equ DSENS_PORT = PORTL
.equ DSENS_TRIG_PORT_L = 1 << PL6 ;digital pin 43
.equ DSENS_TRIG_PORT_R = 1 << PL7 ;digital pin 42
.equ DSENS_ECHO_PORT_L = 1 << PL0 ;digital pin 49
.equ DSENS_ECHO_PORT_R = 1 << PL1 ;digital pin 48
.equ DSENS_PORTD = DDRL

;autogenerated
;timer time values
TIMUTILS_M_PSCL (DSENS_ECHO_TIMEOUT_LOW_US + DSENS_ECHO_TIMEOUT_HIGH_US) / 1000000.0, 16, DSENS_PSCL
TIMUTILS_M_CS DSENS_PSCL, DSENS_CS
TIMUTILS_M_TOP DSENS_PSCL, DSENS_ECHO_TIMEOUT_LOW_US / 1000000.0, DSENS_TIMEOUT_LOW_TOP
TIMUTILS_M_TOP DSENS_PSCL, DSENS_ECHO_TIMEOUT_HIGH_US / 1000000.0, DSENS_TIMEOUT_HIGH_TOP_DIFF
;waveform generation mode
.equ DSENS_WGM = 4 ;clear timer on compare match A
.equ DSENS_TCCRA_WGM = DSENS_WGM & 0b11
.equ DSENS_TCCRB_WGM = (DSENS_WGM >> 2) << 3
;input capture noise canceler
.equ DSENS_TCCRB_ICNC = 1 << 7
;input capture edge select
.equ DSENS_TCCRB_ICES_FALLING = 0 << 6
.equ DSENS_TCCRB_ICES_RISING = 1 << 6
;prescaler value
.equ DSENS_TCCRB_CS = DSENS_CS
;input capture interrupt mask
.equ DSENS_TIMSK_ICIE = 1 << 5
;output capture match interrupt mask
.equ DSENS_TIMSK_OCIEA = 1 << 1
;input capture interrupt mask
.equ DSENS_TIFR_ICF = 1 << 5
;output capture match interrupt flag
.equ DSENS_TIFR_OCFA = 1 << 1

;times
TIMUTILS_M_TOP DSENS_PSCL, (DSENS_ECHO_MIN_US + (DSENS_ECHO_MAX_US - DSENS_ECHO_MIN_US) * 0 / 16.0) / 1000000.0, DSENS_TIME_0
TIMUTILS_M_TOP DSENS_PSCL, (DSENS_ECHO_MIN_US + (DSENS_ECHO_MAX_US - DSENS_ECHO_MIN_US) * 1 / 16.0) / 1000000.0, DSENS_TIME_1
TIMUTILS_M_TOP DSENS_PSCL, (DSENS_ECHO_MIN_US + (DSENS_ECHO_MAX_US - DSENS_ECHO_MIN_US) * 2 / 16.0) / 1000000.0, DSENS_TIME_2
TIMUTILS_M_TOP DSENS_PSCL, (DSENS_ECHO_MIN_US + (DSENS_ECHO_MAX_US - DSENS_ECHO_MIN_US) * 3 / 16.0) / 1000000.0, DSENS_TIME_3
TIMUTILS_M_TOP DSENS_PSCL, (DSENS_ECHO_MIN_US + (DSENS_ECHO_MAX_US - DSENS_ECHO_MIN_US) * 4 / 16.0) / 1000000.0, DSENS_TIME_4
TIMUTILS_M_TOP DSENS_PSCL, (DSENS_ECHO_MIN_US + (DSENS_ECHO_MAX_US - DSENS_ECHO_MIN_US) * 5 / 16.0) / 1000000.0, DSENS_TIME_5
TIMUTILS_M_TOP DSENS_PSCL, (DSENS_ECHO_MIN_US + (DSENS_ECHO_MAX_US - DSENS_ECHO_MIN_US) * 6 / 16.0) / 1000000.0, DSENS_TIME_6
TIMUTILS_M_TOP DSENS_PSCL, (DSENS_ECHO_MIN_US + (DSENS_ECHO_MAX_US - DSENS_ECHO_MIN_US) * 7 / 16.0) / 1000000.0, DSENS_TIME_7
TIMUTILS_M_TOP DSENS_PSCL, (DSENS_ECHO_MIN_US + (DSENS_ECHO_MAX_US - DSENS_ECHO_MIN_US) * 8 / 16.0) / 1000000.0, DSENS_TIME_8
TIMUTILS_M_TOP DSENS_PSCL, (DSENS_ECHO_MIN_US + (DSENS_ECHO_MAX_US - DSENS_ECHO_MIN_US) * 9 / 16.0) / 1000000.0, DSENS_TIME_9
TIMUTILS_M_TOP DSENS_PSCL, (DSENS_ECHO_MIN_US + (DSENS_ECHO_MAX_US - DSENS_ECHO_MIN_US) * 10 / 16.0) / 1000000.0, DSENS_TIME_10
TIMUTILS_M_TOP DSENS_PSCL, (DSENS_ECHO_MIN_US + (DSENS_ECHO_MAX_US - DSENS_ECHO_MIN_US) * 11 / 16.0) / 1000000.0, DSENS_TIME_11
TIMUTILS_M_TOP DSENS_PSCL, (DSENS_ECHO_MIN_US + (DSENS_ECHO_MAX_US - DSENS_ECHO_MIN_US) * 12 / 16.0) / 1000000.0, DSENS_TIME_12
TIMUTILS_M_TOP DSENS_PSCL, (DSENS_ECHO_MIN_US + (DSENS_ECHO_MAX_US - DSENS_ECHO_MIN_US) * 13 / 16.0) / 1000000.0, DSENS_TIME_13
TIMUTILS_M_TOP DSENS_PSCL, (DSENS_ECHO_MIN_US + (DSENS_ECHO_MAX_US - DSENS_ECHO_MIN_US) * 14 / 16.0) / 1000000.0, DSENS_TIME_14
TIMUTILS_M_TOP DSENS_PSCL, (DSENS_ECHO_MIN_US + (DSENS_ECHO_MAX_US - DSENS_ECHO_MIN_US) * 15 / 16.0) / 1000000.0, DSENS_TIME_15
TIMUTILS_M_TOP DSENS_PSCL, (DSENS_ECHO_MAX_HELD_US) / 1000000.0, DSENS_TIME_OVER

.macro DSENS_SR_SETUP
	;set trig port direction
	ldi dsens_tmp1, DSENS_TRIG_PORT_L | DSENS_TRIG_PORT_R
	sts DSENS_PORTD, dsens_tmp1
	;clear counter
	clr dsens_tmp1
	sts TCNT4H, dsens_tmp1
	sts TCNT4L, dsens_tmp1
	sts TCNT5H, dsens_tmp1
	sts TCNT5L, dsens_tmp1
	;set TCCRA (COMA1, COMA0, COMB1, COMB0, COMC1, COMC0, WGM1, WGM0)
	ldi dsens_tmp1, DSENS_TCCRA_WGM
	sts TCCR4A, dsens_tmp1
	sts TCCR5A, dsens_tmp1
	;set TCCRB (ICNC, ICES, [0], WGM3, WGM2, CS2, CS1, CS0)
	ldi dsens_tmp1, DSENS_TCCRB_ICNC | DSENS_TCCRB_ICES_FALLING | DSENS_TCCRB_WGM | DSENS_TCCRB_CS
	sts TCCR4B, dsens_tmp1
	ldi dsens_tmp1, DSENS_TCCRB_WGM
	sts TCCR5B, dsens_tmp1
	;set TCCRC (FOCA, FOCB, FOCC, [0], [0], [0], [0], [0]) 
	clr dsens_tmp1
	sts TCCR4C, dsens_tmp1
	sts TCCR5C, dsens_tmp1
	;set TIMSK ([0], [0], ICIE, [0], OCIEC, OCIEB, OCIEA, TOIE)
	ldi dsens_tmp1, DSENS_TIMSK_OCIEA
	sts TIMSK4, dsens_tmp1
	clr dsens_tmp1
	sts TIMSK5, dsens_tmp1
	;set OCRA
	ldi dsens_tmp1, LOW( DSENS_TIMEOUT_LOW_TOP )
	ldi dsens_tmp2, HIGH( DSENS_TIMEOUT_LOW_TOP )
	sts OCR4AH, dsens_tmp2
	sts OCR4AL, dsens_tmp1
.endmacro

;input capture event isr
;params (0)'timer index'
.macro DSENS_ISR_ICI
	;end cycle if falling
	lds dsens_tmp1, TCCR@0B
	cpi dsens_tmp1, DSENS_TCCRB_ICNC | DSENS_TCCRB_ICES_FALLING | DSENS_TCCRB_WGM | DSENS_TCCRB_CS
	breq dsens_isr_oca@0
	;rising edge
	;save input capture register
	lds dsens_tl, ICR@0L
	lds dsens_th, ICR@0H
	;enable input capture interrupt on falling edge
	ldi dsens_tmp1, DSENS_TCCRB_ICNC | DSENS_TCCRB_ICES_FALLING | DSENS_TCCRB_WGM | DSENS_TCCRB_CS
	sts TCCR@0B, dsens_tmp1
	;set output compare match value
	movw dsens_tmp2:dsens_tmp1, dsens_th:dsens_tl
	subi dsens_tmp1, -LOW( DSENS_TIMEOUT_HIGH_TOP_DIFF )
	sbci dsens_tmp2, -HIGH( DSENS_TIMEOUT_HIGH_TOP_DIFF )
	sts OCR@0AH, dsens_tmp2
	sts OCR@0AL, dsens_tmp1
	;clear interrupt flags
	ldi dsens_tmp1, DSENS_TIFR_ICF | DSENS_TIFR_OCFA
	out TIFR@0, dsens_tmp1
	reti
.endmacro

;params (0)'compare' (1)'jump label'
.macro DSENS_SR_COMPARE
	ldi dsens_tmp2, HIGH( @0 )
	cpi dsens_tmp1, LOW( @0 )
	cpc dsens_th, dsens_tmp2
	brlo @1
.endmacro

.equ DSENS_OUT_FAILURE_BIT = 7

;params (tmp2:tmp1)'falling time' (th:tl)'rising time'
;result (tl[3:0])'result' (tl[OUT_FAILURE_BIT])'failure'
;86 cycles
dsens_sr_output:
	sub dsens_tmp1, dsens_tl
	sbc dsens_tmp2, dsens_th
	brne dsens_l_sr_output_valid
	;output low timeout failure
	;set result failure bit
	ldi dsens_tmp1, 1 << DSENS_OUT_FAILURE_BIT
	mov dsens_tl, dsens_tmp1
	;wait
	ldi  dsens_tmp1, 23
	dec  dsens_tmp1
    brne PC - 1
    rjmp dsens_l_sr_output_ret
dsens_l_sr_output_valid:
	;output valid
	mov dsens_th, dsens_tmp2
	ldi dsens_tmp2, 15
	mov dsens_tl, dsens_tmp2
	;state (th:tmp1)'measure' (tmp2)[free] (tl)'counter'
	DSENS_SR_COMPARE DSENS_TIME_1, dsens_l_sr_output_0
	DSENS_SR_COMPARE DSENS_TIME_2, dsens_l_sr_output_1
	DSENS_SR_COMPARE DSENS_TIME_3, dsens_l_sr_output_2
	DSENS_SR_COMPARE DSENS_TIME_4, dsens_l_sr_output_3
	DSENS_SR_COMPARE DSENS_TIME_5, dsens_l_sr_output_4
	DSENS_SR_COMPARE DSENS_TIME_6, dsens_l_sr_output_5
	DSENS_SR_COMPARE DSENS_TIME_7, dsens_l_sr_output_6
	DSENS_SR_COMPARE DSENS_TIME_8, dsens_l_sr_output_7
	DSENS_SR_COMPARE DSENS_TIME_9, dsens_l_sr_output_8
	DSENS_SR_COMPARE DSENS_TIME_10, dsens_l_sr_output_9
	DSENS_SR_COMPARE DSENS_TIME_11, dsens_l_sr_output_10
	DSENS_SR_COMPARE DSENS_TIME_12, dsens_l_sr_output_11
	DSENS_SR_COMPARE DSENS_TIME_13, dsens_l_sr_output_12
	DSENS_SR_COMPARE DSENS_TIME_14, dsens_l_sr_output_13
	DSENS_SR_COMPARE DSENS_TIME_15, dsens_l_sr_output_14
	DSENS_SR_COMPARE DSENS_TIME_OVER, dsens_l_sr_output_15
	;output high timeout failure
	;set result failure bit
	ldi dsens_tmp1, 1 << DSENS_OUT_FAILURE_BIT
	mov dsens_tl, dsens_tmp1
	rjmp dsens_l_sr_output_ret_w1
	;results
dsens_l_sr_output_0:
	dec dsens_tl
dsens_l_sr_output_1:
	dec dsens_tl
dsens_l_sr_output_2:
	dec dsens_tl
dsens_l_sr_output_3:
	dec dsens_tl
dsens_l_sr_output_4:
	dec dsens_tl
dsens_l_sr_output_5:
	dec dsens_tl
dsens_l_sr_output_6:
	dec dsens_tl
dsens_l_sr_output_7:
	dec dsens_tl
dsens_l_sr_output_8:
	dec dsens_tl
dsens_l_sr_output_9:
	dec dsens_tl
dsens_l_sr_output_10:
	dec dsens_tl
dsens_l_sr_output_11:
	dec dsens_tl
dsens_l_sr_output_12:
	dec dsens_tl
dsens_l_sr_output_13:
	dec dsens_tl
dsens_l_sr_output_14:
	dec dsens_tl
dsens_l_sr_output_15:
	ldi dsens_tmp1, 16
	sub dsens_tmp1, dsens_tl
dsens_l_sr_output_wait:
	dec dsens_tmp1
	brne dsens_l_sr_output_wait
dsens_l_sr_output_ret:
	ret
dsens_l_sr_output_ret_w1:
	nop
	ret

;output compare match event isr
;params (0)'timer index' (1)'opponent timer index' (2)'side lowercase' (3)'opposite side uppercase'
.macro DSENS_ISR_OCA
	;start opponent trigger signal
	ldi dsens_tmp1, DSENS_TRIG_PORT_@3
	sts DSENS_PORT, dsens_tmp1
	;stop timer
	ldi dsens_tmp1, DSENS_TCCRB_WGM
	sts TCCR@0B, dsens_tmp1
	;disable timer interrupts
	clr dsens_tmp1
	sts TIMSK@0, dsens_tmp1
	;set opponent timer output compare match value
	ldi dsens_tmp1, LOW( DSENS_TIMEOUT_LOW_TOP )
	ldi dsens_tmp2, HIGH( DSENS_TIMEOUT_LOW_TOP )
	sts OCR@1AH, dsens_tmp2
	sts OCR@1AL, dsens_tmp1
	;clear opponent timer
	clr dsens_tmp1
	sts TCNT@1H, dsens_tmp1
	sts TCNT@1L, dsens_tmp1
	;calculate output
	lds dsens_tmp1, ICR@0L
	lds dsens_tmp2, ICR@0H
	rcall dsens_sr_output
	sbrs dsens_tl, DSENS_OUT_FAILURE_BIT
	mov dsens_out_@2, dsens_tl
	;set opponent timer interrupts
	ldi dsens_tmp1, DSENS_TIMSK_ICIE | DSENS_TIMSK_OCIEA
	sts TIMSK@1, dsens_tmp1
	;clear both timers interrupt flags
	ldi dsens_tmp1, DSENS_TIFR_ICF | DSENS_TIFR_OCFA
	out TIFR@0, dsens_tmp1
	out TIFR@1, dsens_tmp1
	;start opponent timer
	ldi dsens_tmp1, DSENS_TCCRB_ICNC | DSENS_TCCRB_ICES_RISING | DSENS_TCCRB_WGM | DSENS_TCCRB_CS
	sts TCCR@1B, dsens_tmp1
	;clear records
	lds dsens_tl, ICR@1L
	lds dsens_th, ICR@1H
	;wait for 10uS (117 cycles to 160 cycles)
	ldi  dsens_tmp1, 13
	dec  dsens_tmp1
    brne PC - 1
	;end all trigger signals
	clr dsens_tmp1
	sts DSENS_PORT, dsens_tmp1
	reti
.endmacro

dsens_isr_ic4:
	DSENS_ISR_ICI 4

dsens_isr_oca4:
	DSENS_ISR_OCA 4, 5, l, R

dsens_isr_ic5:
	DSENS_ISR_ICI 5

dsens_isr_oca5:
	DSENS_ISR_OCA 5, 4, r, L
